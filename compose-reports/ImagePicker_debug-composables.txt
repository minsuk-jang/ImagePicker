restartable skippable fun ImageCell(
  stable modifier: Modifier? = @static Companion
  stable mediaContent: MediaContent
)
restartable skippable scheme("[androidx.compose.ui.UiComposable, [androidx.compose.ui.UiComposable], [androidx.compose.ui.UiComposable], [androidx.compose.ui.UiComposable]]") fun ImagePickerScreen(
  stable state: ImagePickerState? = @dynamic rememberImagePickerState(0, false, $composer, 0, 0b0011)
  stable albumTopBar: @[ExtensionFunctionType] Function3<ImagePickerAlbumScope, Composer, Int, Unit>? = @static ComposableSingletons$ImagePickerScreenKt.lambda-1
  stable previewTopBar: @[ExtensionFunctionType] Function3<PreviewTopBarScope, Composer, Int, Unit>? = @static ComposableSingletons$ImagePickerScreenKt.lambda-2
  stable content: @[ExtensionFunctionType] Function4<BoxScope, MediaContent, Composer, Int, Unit>
)
restartable scheme("[androidx.compose.ui.UiComposable, [androidx.compose.ui.UiComposable], [androidx.compose.ui.UiComposable], [androidx.compose.ui.UiComposable]]") fun ImagePickerScaffold(
  stable modifier: Modifier? = @static Companion
  stable state: ImagePickerState? = @dynamic rememberImagePickerState(0, false, $composer, 0, 0b0011)
  unstable viewModel: ImagePickerViewModel
  stable onNavigateToPreview: Function1<Int, Unit>? = @static { it: Int ->

}

  stable albumTopBar: @[ExtensionFunctionType] Function3<ImagePickerAlbumScope, Composer, Int, Unit>? = @static ComposableSingletons$ImagePickerScreenKt.lambda-3
  stable previewTopBar: @[ExtensionFunctionType] Function3<PreviewTopBarScope, Composer, Int, Unit>? = @static ComposableSingletons$ImagePickerScreenKt.lambda-4
  stable content: @[ExtensionFunctionType] Function4<BoxScope, MediaContent, Composer, Int, Unit>
)
restartable scheme("[androidx.compose.ui.UiComposable, [androidx.compose.ui.UiComposable]]") fun ImagePickerContent(
  stable modifier: Modifier? = @static Companion
  mediaContents: LazyPagingItems<MediaContent>
  unstable selectedUris: List<Uri>
  stable onClick: Function1<Uri, Unit>
  stable onPhoto: Function0<Unit>
  stable onDragStart: Function1<Uri, Unit>
  stable onDrag: Function3<@[ParameterName(name = 'start')] Int?, @[ParameterName(name = 'end')] Int?, List<MediaContent>, Unit>
  stable onDragEnd: Function0<Unit>? = @static {

}

  stable onNavigateToPreview: Function1<MediaContent, Unit>? = @static { it: MediaContent ->

}

  stable content: @[ExtensionFunctionType] Function4<BoxScope, MediaContent, Composer, Int, Unit>
)
fun rememberImagePickerState(
  stable max: Int = @static Constants.MAX_SIZE
  stable autoSelectAfterCapture: Boolean = @dynamic LiveLiterals$ImagePickerScreenKt.Boolean$param-autoSelectAfterCapture$fun-rememberImagePickerState()
): ImagePickerState
restartable scheme("[androidx.compose.ui.UiComposable]") fun PreviewScreen(
  stable modifier: Modifier? = @static Companion
  unstable viewModel: ImagePickerViewModel
  stable onBack: Function0<Unit>? = @static {

}

  stable initializeFirstVisibleItemIndex: Int = @dynamic LiveLiterals$PreviewScreenKt.Int$param-initializeFirstVisibleItemIndex$fun-PreviewScreen()
)
restartable skippable scheme("[androidx.compose.ui.UiComposable]") fun PreviewContent(
  stable modifier: Modifier? = @static Companion
  mediaContents: LazyPagingItems<MediaContent>
  stable initializeFirstVisibleItemIndex: Int = @dynamic LiveLiterals$PreviewScreenKt.Int$param-initializeFirstVisibleItemIndex$fun-PreviewContent()
  stable onBack: Function0<Unit>? = @static {

}

  unused stable onSelect: Function0<Unit>? = @static {

}

)
